from Source.Core.Horoscope import Zodiacs, ZodiacsSigns

from dublib.Engine.GetText import _
from dublib.Polyglot import HTML

from telebot import types

class InlineKeyboards:
	"""–ö–æ–ª–ª–µ–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
	
	def delete(label: str) -> types.InlineKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞."""

		Menu = types.InlineKeyboardMarkup()
		Menu.add(types.InlineKeyboardButton(label, callback_data = "delete"))

		return Menu

	def notifications() -> types.InlineKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""

		Menu = types.InlineKeyboardMarkup()
		No = types.InlineKeyboardButton(_("–û—Ç–∫–ª—é—á–∏—Ç—å") + " ‚ùåÔ∏è", callback_data = "notifications_disable")
		Yes = types.InlineKeyboardButton(_("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å") + " ‚úÖ", callback_data = "notifications_enable")
		Menu.add(No, Yes, row_width = 2)
		
		return Menu

	def share(self, bot_name: str) -> types.InlineKeyboardMarkup:
		"""
		–°—Ç—Ä–æ–∏—Ç Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –∫–Ω–æ–ø–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.
			bot_name ‚Äì –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞.
		"""

		Menu = types.InlineKeyboardMarkup()
		BotNames = f"\n@{bot_name}\n@{bot_name}\n\n"
		Text = BotNames + HTML(_("<b>üåü –ì–æ—Ä–æ—Å–∫–æ–ø –¥–Ω—è</b>\n–ù–∞–π–¥–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏ —É–∑–Ω–∞–π, —á—Ç–æ –¥–ª—è —Ç–µ–±—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–≤–µ–∑–¥—ã!\n\n<b><i>–ü–æ–ª—å–∑—É–π—Å—è –∏ –¥–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏!</i></b>")).plain_text
		Share = types.InlineKeyboardButton(_("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"), switch_inline_query = Text)
		Menu.add(Share)

		return Menu

	def zodiac_selector() -> types.InlineKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞."""

		Menu = types.InlineKeyboardMarkup()
		RowButtons = list()

		for Zodiac in ZodiacsSigns: 
			RowButtons.append(types.InlineKeyboardButton(Zodiac.value + " " + Zodiacs[Zodiac.name].value.title(), callback_data = "select_" + Zodiacs[Zodiac.name].name))
			
			if len(RowButtons) % 2 == 0:
				Menu.row(*RowButtons)
				RowButtons = list()
		
		return Menu

class ReplyKeyboards:
	"""–ö–æ–ª–ª–µ–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ Reply-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""

	def zodiac_menu() -> types.ReplyKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç Reply-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞."""

		Menu = types.ReplyKeyboardMarkup(resize_keyboard = True)
		RowButtons = list()

		for Zodiac in ZodiacsSigns: 
			RowButtons.append(types.KeyboardButton(Zodiac.value + " " + Zodiacs[Zodiac.name].value.title()))
			
			if len(RowButtons) % 3 == 0:
				Menu.row(*RowButtons)
				RowButtons = list()
		
		return Menu