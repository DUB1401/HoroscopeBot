from dublib.Methods import ReadJSON, WriteJSON
from Source.Functions import EscapeCharacters

import telebot
import enum

# –¢–∏–ø—ã –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
class ExpectedMessageTypes(enum.Enum):
	
	#---> –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞.
	#==========================================================================================#
	# –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
	Undefined = "undefined"
	# –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
	Message = "message"
	# –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏.
	Button = "button"
	# –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
	Image = "image"
	# –°—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–∏.
	Link = "link"

# –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.
class BotManager:
	
	# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
	def __SaveSettings(self):
		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
		WriteJSON("Settings.json", self.__Settings)
	
	# –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.
	def __init__(self, Settings: dict, Bot: telebot.TeleBot):
		
		#---> –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
		#==========================================================================================#
		# –¢–µ–∫—É—â–∏–π —Ç–∏–ø –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
		self.__ExpectedType = ExpectedMessageTypes.Undefined
		# –°–ª–æ–≤–∞—Ä—å –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
		self.__Horoscope = ReadJSON("Data/Horoscope.json")
		# –°–ª–æ–≤–∞—Ä—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
		self.__Users = ReadJSON("Data/Users.json")
		# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
		self.__Settings = Settings.copy()
		# –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
		self.__Bot = Bot
		
	# –û—Ç–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞.
	def disable(self):
		# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
		self.__Settings["active"] = False
		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
		self.__SaveSettings()
		
	# –í–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞.
	def enable(self):
		# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
		self.__Settings["active"] = True
		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
		self.__SaveSettings()
		
	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
	def getHoroscope(self, Zodiac: str) -> str:
		# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞.
		Date = EscapeCharacters(self.__Horoscope["date"].split(" ")[0])
		# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
		Text = f"*–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {Date}*\n\nüîÆ *" + Zodiac.upper() + "*\n\n"
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä—É–±—Ä–∏–∫ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
		if self.__Horoscope["horoscopes"][Zodiac]["love"] != None: Text += self.__Horoscope["horoscopes"][Zodiac]["love"] + "\n\n"
		if self.__Horoscope["horoscopes"][Zodiac]["career"] != None: Text += self.__Horoscope["horoscopes"][Zodiac]["career"] + "\n\n"
		if self.__Horoscope["horoscopes"][Zodiac]["health"] != None: Text += self.__Horoscope["horoscopes"][Zodiac]["health"] + "\n\n"

		return Text

	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
	def getExpectedType(self) -> ExpectedMessageTypes:
		return self.__ExpectedType
	
	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞.
	def getStatus(self) -> bool:
		return self.__Settings["active"]
	
	# –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
	def login(self, UserID: int, Password: str | None = None) -> bool:
		# –°–æ—Å—Ç–æ—è–Ω–∏–µ: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
		IsAdmin = False

		# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.
		if Password == None and UserID in self.__Settings["admins"]:
			# –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
			IsAdmin = True
			
		return IsAdmin
	
	# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
	def register(self, UserID: int):
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
		self.__Settings["admins"].append(UserID)
		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
		self.__SaveSettings()
	
	# –ó–∞–¥–∞—ë—Ç —Ç–∏–ø –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
	def setExpectedType(self, Type: ExpectedMessageTypes):
		self.__ExpectedType = Type