from dublib.Methods import ReadJSON, RemoveRecurringSubstrings, WriteJSON
from Source.Functions import EscapeCharacters
from freeGPT import Client
from time import sleep

import datetime
import g4f

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤.
class Horoscope:
	
	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø.
	def __GetHoroscope(self, Zodiac: str) -> str:
		# –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: –ø—Ä–æ–≥—Ä–µ—Å—Å.
		print(f"Updating horoscope for zodiac: \"{Zodiac}\".")
		# –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É.
		Zodiac = Zodiac.lower()
		# –ì–æ—Ä–æ—Å–∫–æ–ø.
		Text = ""
		# –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞.
		Request = f"–°–æ—Å—Ç–∞–≤—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {Zodiac}. –ì–æ—Ä–æ—Å–∫–æ–ø –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∏—à–Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –ª–∏—á–Ω–∞—è –∂–∏–∑–Ω—å, –∫–∞—Ä—å–µ—Ä–∞, –∑–¥–æ—Ä–æ–≤—å–µ! –°–¥–µ–ª–∞–π –µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä–∞—Å–∏–≤—ã–º –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–º."
		
		# –ü–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
		while "–ª–∏—á–Ω–∞—è –∂–∏–∑–Ω—å:" not in Text.lower() or "–∫–∞—Ä—å–µ—Ä–∞:" not in Text.lower() or "–∑–¥–æ—Ä–æ–≤—å–µ:" not in Text.lower():
			# –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞.
			print(f"Requesting by " + self.__Settings["mode"] + "...")
			
			# –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ freeGPT.
			if self.__Settings["mode"] == "freeGPT":
				# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞.
				Response = Client.create_completion(self.__Settings["model"], Request)
				# –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞.
				Text = Response.encode("utf-8").decode("unicode-escape")
			
			# –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ g4f.
			elif self.__Settings["mode"] == "g4f":
				# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞.
				Text = g4f.ChatCompletion.create(model = g4f.models.gpt_4, messages = [{"role": "user", "content": Request}])
				
			else:
				# –í—ã–±—Ä–æ—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è.
				raise Exception("Unsupported GPT-4 lib: \"" + self.__Settings["mode"] + "\".")
				
		# –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ.
		print("Done.")
		
		return Text
	
	# –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.
	def __init__(self, Settings: dict):
		
		#---> –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
		#==========================================================================================#
		# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
		self.__Settings = Settings.copy()
		# –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
		self.__Horoscope = ReadJSON("Data/Horoscope.json")
		
	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –¥–∞—Ç—É.
	def getDate(self) -> str:
		return self.__Horoscope["date"]

	# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç—ã –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤.
	def getHoroscopes(self) -> dict:
		return self.__Horoscope["horoscopes"]
	
	# –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.
	def update(self):
		# –ó–∞–ø–∏—Å—å –¥–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
		self.__Horoscope["date"] = str(datetime.datetime.now().strftime("%d.%m.%Y"))
		
		# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞.
		for Key in self.__Horoscope["horoscopes"].keys():
			# –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.
			Text = self.__GetHoroscope(Key)
			
			# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–±–∑–∞—Ü–∞.
			for Paragraph in Text.split("\n\n"):
				# –û—á–∏—Å—Ç–∫–∞ –∫—Ä–∞–µ–≤—ã—Ö –ø—Ä–æ–±–µ–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
				Bufer = RemoveRecurringSubstrings(Paragraph.strip(), " ")
				# –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.
				Bufer = EscapeCharacters(Bufer.replace("\n", ""))
				
				# –ï—Å–ª–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ª–∏—á–Ω—É—é –∂–∏–∑–Ω—å.
				if Bufer.startswith("–õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å"):
					# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏.
					self.__Horoscope["horoscopes"][Key]["love"] = Bufer.strip().replace("–õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å:", "üíû _*–õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å:*_ ")
					
				# –ï—Å–ª–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ª–∏—á–Ω—É—é –∂–∏–∑–Ω—å.
				if Bufer.startswith("–ö–∞—Ä—å–µ—Ä–∞"):
					# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏.
					self.__Horoscope["horoscopes"][Key]["career"] = Bufer.strip().replace("–ö–∞—Ä—å–µ—Ä–∞:", "üíº _*–ö–∞—Ä—å–µ—Ä–∞:*_ ")
					
				# –ï—Å–ª–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ª–∏—á–Ω—É—é –∂–∏–∑–Ω—å.
				if Bufer.startswith("–ó–¥–æ—Ä–æ–≤—å–µ"):
					# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏.
					self.__Horoscope["horoscopes"][Key]["health"] =  Bufer.strip().replace("–ó–¥–æ—Ä–æ–≤—å–µ:", "üíâ _*–ó–¥–æ—Ä–æ–≤—å–µ:*_ ")
				
			# –í—ã–∂–∏–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
			sleep(self.__Settings["delay"])

		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
		WriteJSON("Data/Horoscope.json", self.__Horoscope)